{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\meetdoc2\\\\meetdoc-main\\\\src\\\\pages\\\\Uploadpage.js\";\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './Uploadpage.css';\n\n// export const Uploadpage = () => {\n//     const [selectedFile, setSelectedFile] = useState(null);\n\n//     const handleFileChange = (event) => {\n//         const file = event.target.files[0];\n//         if (file) {\n//             setSelectedFile(file);\n//         }\n//     };\n\n//     const handleUpload = () => {\n//         if (selectedFile) {\n//             const formData = new FormData();\n//             formData.append('audioFile', selectedFile);\n\n//             axios.post('YOUR_UPLOAD_URL', formData)\n//                 .then(response => {\n//                     // Handle successful upload\n//                     alert('File uploaded successfully using axios.');\n//                 })\n//                 .catch(error => {\n//                     // Handle upload error\n//                     console.error('Error:', error);\n//                     alert('Upload failed using axios.');\n//                 });\n//         } else {\n//             alert('Please select a file to upload.');\n//         }\n//     };\n\n//     return (\n//         <div className=\"upload-container\">\n//             <label className=\"choosefile\">\n//                 Choose File\n//                 <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} className=\"file-input\" />\n//             </label>\n//             {selectedFile && (\n//                 <div className=\"selected-file\">\n//                     <p>Selected File: {selectedFile.name}</p>\n//                     <audio controls className=\"audio-preview\">\n//                         <source src={URL.createObjectURL(selectedFile)} />\n//                         Your browser does not support the audio element.\n//                     </audio>\n//                 </div>\n//             )}\n//             <button onClick={handleUpload} className=\"upload-button\">Upload</button>\n//         </div>\n//     );\n// };\n\n// export default Uploadpage;\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Uploadpage.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Uploadpage = ({\n  files,\n  setFiles,\n  removeFile\n}) => {\n  const uploadHandler = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    file.isUploading = true;\n    setFiles([...files, file]);\n\n    // upload file\n    const formData = new FormData();\n    formData.append(\"newFile\", file, file.name);\n    axios.post('http://localhost:8080/upload', formData).then(res => {\n      file.isUploading = false;\n      setFiles([...files, file]);\n    }).catch(err => {\n      // inform the user\n      console.error(err);\n      removeFile(file.name);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: uploadHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), \"Upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Uploadpage;\nexport default Uploadpage;\nvar _c;\n$RefreshReg$(_c, \"Uploadpage\");","map":{"version":3,"names":["React","FontAwesomeIcon","faPlus","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Uploadpage","files","setFiles","removeFile","uploadHandler","event","file","target","isUploading","formData","FormData","append","name","post","then","res","catch","err","console","error","children","className","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/meetdoc2/meetdoc-main/src/pages/Uploadpage.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './Uploadpage.css';\r\n\r\n// export const Uploadpage = () => {\r\n//     const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n//     const handleFileChange = (event) => {\r\n//         const file = event.target.files[0];\r\n//         if (file) {\r\n//             setSelectedFile(file);\r\n//         }\r\n//     };\r\n\r\n//     const handleUpload = () => {\r\n//         if (selectedFile) {\r\n//             const formData = new FormData();\r\n//             formData.append('audioFile', selectedFile);\r\n\r\n//             axios.post('YOUR_UPLOAD_URL', formData)\r\n//                 .then(response => {\r\n//                     // Handle successful upload\r\n//                     alert('File uploaded successfully using axios.');\r\n//                 })\r\n//                 .catch(error => {\r\n//                     // Handle upload error\r\n//                     console.error('Error:', error);\r\n//                     alert('Upload failed using axios.');\r\n//                 });\r\n//         } else {\r\n//             alert('Please select a file to upload.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"upload-container\">\r\n//             <label className=\"choosefile\">\r\n//                 Choose File\r\n//                 <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} className=\"file-input\" />\r\n//             </label>\r\n//             {selectedFile && (\r\n//                 <div className=\"selected-file\">\r\n//                     <p>Selected File: {selectedFile.name}</p>\r\n//                     <audio controls className=\"audio-preview\">\r\n//                         <source src={URL.createObjectURL(selectedFile)} />\r\n//                         Your browser does not support the audio element.\r\n//                     </audio>\r\n//                 </div>\r\n//             )}\r\n//             <button onClick={handleUpload} className=\"upload-button\">Upload</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Uploadpage;\r\n\r\n\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport './Uploadpage.css';\r\nimport axios from 'axios';\r\n\r\nconst Uploadpage = ({ files, setFiles, removeFile }) => {\r\n    const uploadHandler = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n        file.isUploading = true;\r\n        setFiles([...files, file]);\r\n\r\n        // upload file\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"newFile\",\r\n            file,\r\n            file.name\r\n        );\r\n        axios.post('http://localhost:8080/upload', formData)\r\n            .then((res) => {\r\n                file.isUploading = false;\r\n                setFiles([...files, file]);\r\n            })\r\n            .catch((err) => {\r\n                // inform the user\r\n                console.error(err);\r\n                removeFile(file.name);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"file-card\">\r\n\r\n                <div className=\"file-inputs\">\r\n                    <input type=\"file\" accept=\"audio/*\" onChange={uploadHandler} />\r\n                    <button>\r\n                        <i>\r\n                            <FontAwesomeIcon icon={faPlus} />\r\n                        </i>\r\n                        Upload\r\n                    </button>\r\n                </div>\r\n\r\n                {/* <p className=\"main\">Supported files</p>\r\n                <p className=\"info\">Audio files</p> */}\r\n\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Uploadpage;\r\n"],"mappings":";AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EACpD,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACN,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACK,IAAI,EAAE;IACXA,IAAI,CAACE,WAAW,GAAG,IAAI;IACvBN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,IAAI,CAAC,CAAC;;IAE1B;IACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CACX,SAAS,EACTL,IAAI,EACJA,IAAI,CAACM,IACT,CAAC;IACDjB,KAAK,CAACkB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,CAAC,CAC/CK,IAAI,CAAEC,GAAG,IAAK;MACXT,IAAI,CAACE,WAAW,GAAG,KAAK;MACxBN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAK;MACZ;MACAC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBd,UAAU,CAACG,IAAI,CAACM,IAAI,CAAC;IACzB,CAAC,CAAC;EACV,CAAC;EAED,oBACIf,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACIvB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAD,QAAA,eAEtBvB,OAAA;QAAKwB,SAAS,EAAC,aAAa;QAAAD,QAAA,gBACxBvB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,SAAS;UAACC,QAAQ,EAAEpB;QAAc;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/D/B,OAAA;UAAAuB,QAAA,gBACIvB,OAAA;YAAAuB,QAAA,eACIvB,OAAA,CAACJ,eAAe;cAACoC,IAAI,EAAEnC;YAAO;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,UAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL;EAAC,gBACR,CAAC;AAEX,CAAC;AAACE,EAAA,GA9CI9B,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}