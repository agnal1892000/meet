{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport './Uploadpage.css';\nexport const Uploadpage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is in WAV format\n      if (file.type === 'audio/wav') {\n        setSelectedFile(file);\n      } else {\n        alert('Please select a WAV file.');\n      }\n    }\n  };\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('audioFile', selectedFile);\n      axios.post('YOUR_UPLOAD_URL', formData).then(response => {\n        // Handle successful upload\n        alert('File uploaded successfully using axios.');\n      }).catch(error => {\n        // Handle upload error\n        console.error('Error:', error);\n        alert('Upload failed using axios.');\n      });\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n  return (\n    //     <div className=\"upload-container\">\n    //   <label className=\"upload-button\">\n    //     Choose File\n    //     <input type=\"file\" accept=\"audio/wav\" onChange={handleFileChange} className=\"file-input\" />\n    //   </label>\n\n    //   {selectedFile && (\n    //     <div className=\"selected-file\">\n    //       <p>Selected File: {selectedFile.name}</p>\n    //       <audio controls className=\"audio-preview\">\n\n    //         <source src={URL.createObjectURL(selectedFile)} type=\"audio/wav\" />\n    //         Your browser does not support the audio element.\n\n    //       </audio>\n    //     </div>\n\n    //   )}\n    // <button onClick={handleUpload} className=\"upload-button\">Upload</button>\n    // </div>\n\n      /* <div className=\"upload-container\">\r\n       <label className=\"choose-file\" htmlFor=\"file-input\">\r\n         Choose File(s)\r\n       </label>\r\n       <input\r\n         id=\"file-input\"\r\n         type=\"file\"\r\n         accept=\"audio/wav\"\r\n         onChange={handleFileChange}\r\n         className=\"file-input\"\r\n         multiple // Allow multiple file selection\r\n       />\r\n       {selectedFile && (\r\n         <div className=\"selected-file\">\r\n           <p>Selected File: {selectedFile.name}</p>\r\n           <audio controls className=\"audio-preview\">\r\n             <source src={URL.createObjectURL(selectedFile)} type=\"audio/wav\" />\r\n             Your browser does not support the audio element.\r\n           </audio>\r\n         </div>\r\n       )}\r\n       <button onClick={handleUpload} className=\"upload-button\">Upload</button>\r\n      </div>\r\n      */{}\n  );\n};\n_s(Uploadpage, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Uploadpage;\nexport default Uploadpage;\nvar _c;\n$RefreshReg$(_c, \"Uploadpage\");","map":{"version":3,"names":["React","useState","axios","Uploadpage","_s","selectedFile","setSelectedFile","handleFileChange","event","file","target","files","type","alert","handleUpload","formData","FormData","append","post","then","response","catch","error","console","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/meetdoc2/meetdoc-main/src/pages/Uploadpage.js"],"sourcesContent":["import React from 'react'\r\nimport  { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Uploadpage.css';\r\n\r\nexport const Uploadpage = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        // Check if the file is in WAV format\r\n        if (file.type === 'audio/wav') {\r\n          setSelectedFile(file);\r\n        } else {\r\n          alert('Please select a WAV file.');\r\n        }\r\n      }\r\n    };\r\n  \r\n    const handleUpload = () => {\r\n      if (selectedFile) {\r\n        const formData = new FormData();\r\n        formData.append('audioFile', selectedFile);\r\n  \r\n        axios.post('YOUR_UPLOAD_URL', formData)\r\n          .then(response => {\r\n            // Handle successful upload\r\n            alert('File uploaded successfully using axios.');\r\n          })\r\n          .catch(error => {\r\n            // Handle upload error\r\n            console.error('Error:', error);\r\n            alert('Upload failed using axios.');\r\n          });\r\n      } else {\r\n        alert('Please select a file to upload.');\r\n      }\r\n    };\r\n  \r\n  return (\r\n    \r\n//     <div className=\"upload-container\">\r\n//   <label className=\"upload-button\">\r\n//     Choose File\r\n//     <input type=\"file\" accept=\"audio/wav\" onChange={handleFileChange} className=\"file-input\" />\r\n//   </label>\r\n  \r\n//   {selectedFile && (\r\n//     <div className=\"selected-file\">\r\n//       <p>Selected File: {selectedFile.name}</p>\r\n//       <audio controls className=\"audio-preview\">\r\n      \r\n//         <source src={URL.createObjectURL(selectedFile)} type=\"audio/wav\" />\r\n//         Your browser does not support the audio element.\r\n        \r\n//       </audio>\r\n//     </div>\r\n    \r\n//   )}\r\n// <button onClick={handleUpload} className=\"upload-button\">Upload</button>\r\n// </div>\r\n\r\n{/* <div className=\"upload-container\">\r\n  <label className=\"choose-file\" htmlFor=\"file-input\">\r\n    Choose File(s)\r\n  </label>\r\n  <input\r\n    id=\"file-input\"\r\n    type=\"file\"\r\n    accept=\"audio/wav\"\r\n    onChange={handleFileChange}\r\n    className=\"file-input\"\r\n    multiple // Allow multiple file selection\r\n  />\r\n  {selectedFile && (\r\n    <div className=\"selected-file\">\r\n      <p>Selected File: {selectedFile.name}</p>\r\n      <audio controls className=\"audio-preview\">\r\n        <source src={URL.createObjectURL(selectedFile)} type=\"audio/wav\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    </div>\r\n  )}\r\n  <button onClick={handleUpload} className=\"upload-button\">Upload</button>\r\n</div>\r\n */}\r\n\r\n  );\r\n};\r\n\r\nexport default Uploadpage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAUC,QAAQ,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAEzB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMM,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR;MACA,IAAIA,IAAI,CAACG,IAAI,KAAK,WAAW,EAAE;QAC7BN,eAAe,CAACG,IAAI,CAAC;MACvB,CAAC,MAAM;QACLI,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIT,YAAY,EAAE;MAChB,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEZ,YAAY,CAAC;MAE1CH,KAAK,CAACgB,IAAI,CAAC,iBAAiB,EAAEH,QAAQ,CAAC,CACpCI,IAAI,CAACC,QAAQ,IAAI;QAChB;QACAP,KAAK,CAAC,yCAAyC,CAAC;MAClD,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BT,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAEH;IAEF;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;;MAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAvBC,CAuBE;EAAC;AAGJ,CAAC;AAACT,EAAA,CApFWD,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAsFvB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}